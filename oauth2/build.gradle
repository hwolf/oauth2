
buildscript {
    repositories {
        maven {   url "http://jcenter.bintray.com/" }
    }
    dependencies {  classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE" }
}

plugins { id 'org.unbroken-dome.test-sets' version '1.1.0' }

def javaProjects = subprojects

configure(javaProjects) {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'spring-boot'
    apply plugin: 'org.unbroken-dome.test-sets'

    springBoot { bootRepackage.enabled = false }

    ext {
        V_GUAVA = '18.0'
        V_GROOVY = '2.3.10'
        V_JACKSON = '2.4.5'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven {  url "http://jcenter.bintray.com/" }
    }

    testSets { integrationTest { dirName = 'test-integration' } }

    configurations {
        all*.exclude module: 'commons-logging'
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter"
        compile "com.google.guava:guava:$V_GUAVA"

        testCompile "org.springframework.boot:spring-boot-starter-test"
        testCompile "org.codehaus.groovy:groovy-all:$V_GROOVY"
        testCompile "org.spockframework:spock-core:1.0-groovy-2.3"
        testCompile "org.spockframework:spock-spring:1.0-groovy-2.3"
        testCompile "org.assertj:assertj-core:3.0.0"
        testCompile "com.google.guava:guava-testlib:$V_GUAVA"
    }

    jar {
        version = ""
        manifest {
            attributes("Version": project.version)
        }
    }

    tasks.withType(Test) {
        reports {
            html.enabled = true
            html.destination = file("${reporting.baseDir}/${name}")
            junitXml.destination = file("${buildDir}/test-results/${name}")
        }

        outputs.upToDateWhen { false }
    }

    jacoco { toolVersion = "0.7.4.201502262128" }

    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests-unit")
    reportOn subprojects*.test
}

task integrationTestReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests-integration")
    reportOn subprojects*.integrationTest
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn = subprojects*.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

// Tasks for CI
if (project.version != "unspecified") {
    apply from: "gradle/sonar.gradle"
    apply from: "gradle/publish.gradle"
}
